//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PsDataCore.Mods.Pos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PosDbEntities : DbContext
    {
        public PosDbEntities()
            : base("name=PosDbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CARGOS> CARGOS { get; set; }
        public virtual DbSet<CLIENTES> CLIENTES { get; set; }
        public virtual DbSet<COMPANIA> COMPANIA { get; set; }
        public virtual DbSet<COMPANIA_SUCURSALES> COMPANIA_SUCURSALES { get; set; }
        public virtual DbSet<CUENTAS> CUENTAS { get; set; }
        public virtual DbSet<CUENTAS_CLASIFICACION> CUENTAS_CLASIFICACION { get; set; }
        public virtual DbSet<CUENTAS_EVENTOS> CUENTAS_EVENTOS { get; set; }
        public virtual DbSet<CUENTAS_EVENTOS_DETALLE> CUENTAS_EVENTOS_DETALLE { get; set; }
        public virtual DbSet<CUENTAS_ORIGEN> CUENTAS_ORIGEN { get; set; }
        public virtual DbSet<EMPRESAS_GENERAL> EMPRESAS_GENERAL { get; set; }
        public virtual DbSet<EMPRESAS_TIPO> EMPRESAS_TIPO { get; set; }
        public virtual DbSet<SERVICIOS> SERVICIOS { get; set; }
        public virtual DbSet<SERVICIOS_CATEGORIA> SERVICIOS_CATEGORIA { get; set; }
        public virtual DbSet<SERVICIOS_ENTRADAS> SERVICIOS_ENTRADAS { get; set; }
        public virtual DbSet<SERVICIOS_EQUIVALENCIAS> SERVICIOS_EQUIVALENCIAS { get; set; }
        public virtual DbSet<SERVICIOS_UNIDADES> SERVICIOS_UNIDADES { get; set; }
        public virtual DbSet<TIPOS_PAGOS> TIPOS_PAGOS { get; set; }
        public virtual DbSet<TIPOS_SERVICIOS> TIPOS_SERVICIOS { get; set; }
        public virtual DbSet<TRANSACCIONES> TRANSACCIONES { get; set; }
        public virtual DbSet<TRANSACCIONES_TIPO> TRANSACCIONES_TIPO { get; set; }
        public virtual DbSet<VENTAS> VENTAS { get; set; }
        public virtual DbSet<VENTAS_DETALLE> VENTAS_DETALLE { get; set; }
    
        public virtual ObjectResult<GetEquivalencias_Result> GetEquivalencias(Nullable<int> servicioID, Nullable<int> id)
        {
            var servicioIDParameter = servicioID.HasValue ?
                new ObjectParameter("ServicioID", servicioID) :
                new ObjectParameter("ServicioID", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEquivalencias_Result>("GetEquivalencias", servicioIDParameter, idParameter);
        }
    
        public virtual ObjectResult<GetEventosContablesDetalle_Result> GetEventosContablesDetalle(Nullable<int> eventoID, Nullable<int> id)
        {
            var eventoIDParameter = eventoID.HasValue ?
                new ObjectParameter("EventoID", eventoID) :
                new ObjectParameter("EventoID", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEventosContablesDetalle_Result>("GetEventosContablesDetalle", eventoIDParameter, idParameter);
        }
    
        public virtual ObjectResult<GetPresentaciones_Result> GetPresentaciones(Nullable<int> servicioID, Nullable<int> id)
        {
            var servicioIDParameter = servicioID.HasValue ?
                new ObjectParameter("ServicioID", servicioID) :
                new ObjectParameter("ServicioID", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPresentaciones_Result>("GetPresentaciones", servicioIDParameter, idParameter);
        }
    
        public virtual ObjectResult<GetTransacciones_Result> GetTransacciones(Nullable<int> sucursalID, Nullable<int> iD)
        {
            var sucursalIDParameter = sucursalID.HasValue ?
                new ObjectParameter("SucursalID", sucursalID) :
                new ObjectParameter("SucursalID", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTransacciones_Result>("GetTransacciones", sucursalIDParameter, iDParameter);
        }
    
        public virtual int GetVentaDetalle(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetVentaDetalle", idParameter);
        }
    
        public virtual ObjectResult<GetVentas_Result> GetVentas(Nullable<int> autor, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, Nullable<int> idventa)
        {
            var autorParameter = autor.HasValue ?
                new ObjectParameter("autor", autor) :
                new ObjectParameter("autor", typeof(int));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            var idventaParameter = idventa.HasValue ?
                new ObjectParameter("idventa", idventa) :
                new ObjectParameter("idventa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVentas_Result>("GetVentas", autorParameter, desdeParameter, hastaParameter, idventaParameter);
        }
    
        public virtual ObjectResult<GetVentasDetalle_Result> GetVentasDetalle(Nullable<int> idventa)
        {
            var idventaParameter = idventa.HasValue ?
                new ObjectParameter("idventa", idventa) :
                new ObjectParameter("idventa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVentasDetalle_Result>("GetVentasDetalle", idventaParameter);
        }
    
        public virtual ObjectResult<ListCategoriaServicios_Result> ListCategoriaServicios(Nullable<short> dec, Nullable<int> iD)
        {
            var decParameter = dec.HasValue ?
                new ObjectParameter("dec", dec) :
                new ObjectParameter("dec", typeof(short));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListCategoriaServicios_Result>("ListCategoriaServicios", decParameter, iDParameter);
        }
    
        public virtual ObjectResult<ListClientes_Result> ListClientes(Nullable<int> autor, Nullable<int> sucursal)
        {
            var autorParameter = autor.HasValue ?
                new ObjectParameter("autor", autor) :
                new ObjectParameter("autor", typeof(int));
    
            var sucursalParameter = sucursal.HasValue ?
                new ObjectParameter("sucursal", sucursal) :
                new ObjectParameter("sucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListClientes_Result>("ListClientes", autorParameter, sucursalParameter);
        }
    
        public virtual ObjectResult<ListCuentas_Result> ListCuentas(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListCuentas_Result>("ListCuentas", iDParameter);
        }
    
        public virtual ObjectResult<ListCUENTASContables_Result> ListCUENTASContables(Nullable<int> autorID, Nullable<int> iD)
        {
            var autorIDParameter = autorID.HasValue ?
                new ObjectParameter("AutorID", autorID) :
                new ObjectParameter("AutorID", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListCUENTASContables_Result>("ListCUENTASContables", autorIDParameter, iDParameter);
        }
    
        public virtual ObjectResult<ListCuentasOrigen_Result> ListCuentasOrigen(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListCuentasOrigen_Result>("ListCuentasOrigen", iDParameter);
        }
    
        public virtual ObjectResult<ListEventosContables_Result> ListEventosContables(Nullable<int> autor, Nullable<int> id)
        {
            var autorParameter = autor.HasValue ?
                new ObjectParameter("autor", autor) :
                new ObjectParameter("autor", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListEventosContables_Result>("ListEventosContables", autorParameter, idParameter);
        }
    
        public virtual ObjectResult<ListProductos_Result> ListProductos(Nullable<int> autor, Nullable<int> sUCURSALID, Nullable<int> id)
        {
            var autorParameter = autor.HasValue ?
                new ObjectParameter("autor", autor) :
                new ObjectParameter("autor", typeof(int));
    
            var sUCURSALIDParameter = sUCURSALID.HasValue ?
                new ObjectParameter("SUCURSALID", sUCURSALID) :
                new ObjectParameter("SUCURSALID", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListProductos_Result>("ListProductos", autorParameter, sUCURSALIDParameter, idParameter);
        }
    
        public virtual ObjectResult<ListProductos2_Result> ListProductos2(Nullable<int> autor, Nullable<int> sUCURSALID, Nullable<int> id)
        {
            var autorParameter = autor.HasValue ?
                new ObjectParameter("autor", autor) :
                new ObjectParameter("autor", typeof(int));
    
            var sUCURSALIDParameter = sUCURSALID.HasValue ?
                new ObjectParameter("SUCURSALID", sUCURSALID) :
                new ObjectParameter("SUCURSALID", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListProductos2_Result>("ListProductos2", autorParameter, sUCURSALIDParameter, idParameter);
        }
    
        public virtual ObjectResult<ListServicios_Result> ListServicios(Nullable<int> autor, Nullable<int> stock)
        {
            var autorParameter = autor.HasValue ?
                new ObjectParameter("autor", autor) :
                new ObjectParameter("autor", typeof(int));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListServicios_Result>("ListServicios", autorParameter, stockParameter);
        }
    
        public virtual ObjectResult<ListTiposEmpresas_Result> ListTiposEmpresas(Nullable<short> dec, Nullable<int> iD)
        {
            var decParameter = dec.HasValue ?
                new ObjectParameter("dec", dec) :
                new ObjectParameter("dec", typeof(short));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListTiposEmpresas_Result>("ListTiposEmpresas", decParameter, iDParameter);
        }
    
        public virtual ObjectResult<ListTrans_Result> ListTrans(Nullable<int> sucursalID, Nullable<int> iD)
        {
            var sucursalIDParameter = sucursalID.HasValue ?
                new ObjectParameter("SucursalID", sucursalID) :
                new ObjectParameter("SucursalID", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListTrans_Result>("ListTrans", sucursalIDParameter, iDParameter);
        }
    
        public virtual ObjectResult<ListTransacciones_Result> ListTransacciones(Nullable<int> sucursalID, Nullable<int> iD)
        {
            var sucursalIDParameter = sucursalID.HasValue ?
                new ObjectParameter("SucursalID", sucursalID) :
                new ObjectParameter("SucursalID", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListTransacciones_Result>("ListTransacciones", sucursalIDParameter, iDParameter);
        }
    
        public virtual ObjectResult<ListTransacciones2_Result> ListTransacciones2(Nullable<int> sucursalID, Nullable<int> iD)
        {
            var sucursalIDParameter = sucursalID.HasValue ?
                new ObjectParameter("SucursalID", sucursalID) :
                new ObjectParameter("SucursalID", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListTransacciones2_Result>("ListTransacciones2", sucursalIDParameter, iDParameter);
        }
    
        public virtual ObjectResult<ListTransaccionesTipo_Result> ListTransaccionesTipo(Nullable<int> autor, Nullable<int> iD)
        {
            var autorParameter = autor.HasValue ?
                new ObjectParameter("autor", autor) :
                new ObjectParameter("autor", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListTransaccionesTipo_Result>("ListTransaccionesTipo", autorParameter, iDParameter);
        }
    }
}
