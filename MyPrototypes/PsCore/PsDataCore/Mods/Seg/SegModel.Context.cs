//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PsDataCore.Mods.Seg
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SegDbEntities : DbContext
    {
        public SegDbEntities()
            : base("name=SegDbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AUTORES> AUTORES { get; set; }
        public virtual DbSet<AUTORES_PAGO> AUTORES_PAGO { get; set; }
        public virtual DbSet<AUTORES_PLANES> AUTORES_PLANES { get; set; }
        public virtual DbSet<BARRIOS_PARAJES> BARRIOS_PARAJES { get; set; }
        public virtual DbSet<DIST_MUNICIPALES> DIST_MUNICIPALES { get; set; }
        public virtual DbSet<ESTATUSM> ESTATUSM { get; set; }
        public virtual DbSet<MONEDAS> MONEDAS { get; set; }
        public virtual DbSet<MUNICIPIOS> MUNICIPIOS { get; set; }
        public virtual DbSet<NACIONALIDADES> NACIONALIDADES { get; set; }
        public virtual DbSet<PAISES> PAISES { get; set; }
        public virtual DbSet<PERIODICIDADES> PERIODICIDADES { get; set; }
        public virtual DbSet<PERSONAS> PERSONAS { get; set; }
        public virtual DbSet<PERSONAS_TIPO> PERSONAS_TIPO { get; set; }
        public virtual DbSet<PROVINCIAS> PROVINCIAS { get; set; }
        public virtual DbSet<REGIONES> REGIONES { get; set; }
        public virtual DbSet<SECCIONES> SECCIONES { get; set; }
        public virtual DbSet<SUBBARRIOS> SUBBARRIOS { get; set; }
        public virtual DbSet<OPCIONES> OPCIONES { get; set; }
        public virtual DbSet<OPCIONES_PADRE> OPCIONES_PADRE { get; set; }
        public virtual DbSet<OPCIONESROL> OPCIONESROL { get; set; }
        public virtual DbSet<ROLES> ROLES { get; set; }
        public virtual DbSet<ROLESUSUARIO> ROLESUSUARIO { get; set; }
        public virtual DbSet<USUARIOSSEG> USUARIOSSEG { get; set; }
    
        public virtual ObjectResult<Nullable<int>> GENERACODIGO(string table, Nullable<int> autor)
        {
            var tableParameter = table != null ?
                new ObjectParameter("table", table) :
                new ObjectParameter("table", typeof(string));
    
            var autorParameter = autor.HasValue ?
                new ObjectParameter("autor", autor) :
                new ObjectParameter("autor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GENERACODIGO", tableParameter, autorParameter);
        }
    
        public virtual ObjectResult<ListMonedas_Result> ListMonedas(Nullable<short> dec, Nullable<int> iD)
        {
            var decParameter = dec.HasValue ?
                new ObjectParameter("dec", dec) :
                new ObjectParameter("dec", typeof(short));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListMonedas_Result>("ListMonedas", decParameter, iDParameter);
        }
    
        public virtual ObjectResult<ListPaisNacionalidad_Result> ListPaisNacionalidad(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListPaisNacionalidad_Result>("ListPaisNacionalidad", iDParameter);
        }
    
        public virtual ObjectResult<ListPeriodicidades_Result> ListPeriodicidades(Nullable<short> dec, Nullable<int> iD)
        {
            var decParameter = dec.HasValue ?
                new ObjectParameter("dec", dec) :
                new ObjectParameter("dec", typeof(short));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListPeriodicidades_Result>("ListPeriodicidades", decParameter, iDParameter);
        }
    
        public virtual ObjectResult<ListPersonasTipo_Result> ListPersonasTipo(string tabla, Nullable<int> autorID, Nullable<int> iD)
        {
            var tablaParameter = tabla != null ?
                new ObjectParameter("Tabla", tabla) :
                new ObjectParameter("Tabla", typeof(string));
    
            var autorIDParameter = autorID.HasValue ?
                new ObjectParameter("AutorID", autorID) :
                new ObjectParameter("AutorID", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListPersonasTipo_Result>("ListPersonasTipo", tablaParameter, autorIDParameter, iDParameter);
        }
    
        public virtual ObjectResult<ListStatus_Result> ListStatus(string tabla, Nullable<int> iD)
        {
            var tablaParameter = tabla != null ?
                new ObjectParameter("tabla", tabla) :
                new ObjectParameter("tabla", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListStatus_Result>("ListStatus", tablaParameter, iDParameter);
        }
    
        public virtual ObjectResult<GetOpciones_Result> GetOpciones(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOpciones_Result>("GetOpciones", idParameter);
        }
    
        public virtual ObjectResult<GetOpcionesRol_Result> GetOpcionesRol(Nullable<int> rolID)
        {
            var rolIDParameter = rolID.HasValue ?
                new ObjectParameter("RolID", rolID) :
                new ObjectParameter("RolID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOpcionesRol_Result>("GetOpcionesRol", rolIDParameter);
        }
    
        public virtual ObjectResult<GetOpcionesRoles_Result> GetOpcionesRoles(Nullable<int> rolID, Nullable<int> iD, Nullable<int> dec)
        {
            var rolIDParameter = rolID.HasValue ?
                new ObjectParameter("RolID", rolID) :
                new ObjectParameter("RolID", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var decParameter = dec.HasValue ?
                new ObjectParameter("dec", dec) :
                new ObjectParameter("dec", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOpcionesRoles_Result>("GetOpcionesRoles", rolIDParameter, iDParameter, decParameter);
        }
    
        public virtual ObjectResult<GetRoles_Result> GetRoles(Nullable<int> autor, Nullable<int> id, Nullable<int> dec)
        {
            var autorParameter = autor.HasValue ?
                new ObjectParameter("autor", autor) :
                new ObjectParameter("autor", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var decParameter = dec.HasValue ?
                new ObjectParameter("dec", dec) :
                new ObjectParameter("dec", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoles_Result>("GetRoles", autorParameter, idParameter, decParameter);
        }
    
        public virtual ObjectResult<GetRolesUsuario_Result> GetRolesUsuario(Nullable<int> userID, Nullable<int> id)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRolesUsuario_Result>("GetRolesUsuario", userIDParameter, idParameter);
        }
    
        public virtual ObjectResult<GetUsuarios_Result> GetUsuarios(Nullable<int> autor, Nullable<int> id, Nullable<int> dec)
        {
            var autorParameter = autor.HasValue ?
                new ObjectParameter("autor", autor) :
                new ObjectParameter("autor", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var decParameter = dec.HasValue ?
                new ObjectParameter("dec", dec) :
                new ObjectParameter("dec", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUsuarios_Result>("GetUsuarios", autorParameter, idParameter, decParameter);
        }
    
        public virtual ObjectResult<ListAutores_Result> ListAutores(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListAutores_Result>("ListAutores", idParameter);
        }
    
        public virtual ObjectResult<ListOpciones_Result> ListOpciones(string autor, Nullable<int> status)
        {
            var autorParameter = autor != null ?
                new ObjectParameter("autor", autor) :
                new ObjectParameter("autor", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListOpciones_Result>("ListOpciones", autorParameter, statusParameter);
        }
    
        public virtual ObjectResult<ListOpcionesRol_Result> ListOpcionesRol(Nullable<int> rolID, string autor)
        {
            var rolIDParameter = rolID.HasValue ?
                new ObjectParameter("RolID", rolID) :
                new ObjectParameter("RolID", typeof(int));
    
            var autorParameter = autor != null ?
                new ObjectParameter("autor", autor) :
                new ObjectParameter("autor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListOpcionesRol_Result>("ListOpcionesRol", rolIDParameter, autorParameter);
        }
    
        public virtual ObjectResult<ListOpcionesRoles_Result> ListOpcionesRoles(Nullable<int> rolID, string autor)
        {
            var rolIDParameter = rolID.HasValue ?
                new ObjectParameter("RolID", rolID) :
                new ObjectParameter("RolID", typeof(int));
    
            var autorParameter = autor != null ?
                new ObjectParameter("autor", autor) :
                new ObjectParameter("autor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListOpcionesRoles_Result>("ListOpcionesRoles", rolIDParameter, autorParameter);
        }
    
        public virtual ObjectResult<ListRoles_Result> ListRoles(string autor, Nullable<int> status)
        {
            var autorParameter = autor != null ?
                new ObjectParameter("autor", autor) :
                new ObjectParameter("autor", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListRoles_Result>("ListRoles", autorParameter, statusParameter);
        }
    
        public virtual ObjectResult<ListRolesUsuario_Result> ListRolesUsuario(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListRolesUsuario_Result>("ListRolesUsuario", userIdParameter);
        }
    
        public virtual ObjectResult<ListRolesUsuarios_Result> ListRolesUsuarios(Nullable<int> rolID, string autor)
        {
            var rolIDParameter = rolID.HasValue ?
                new ObjectParameter("RolID", rolID) :
                new ObjectParameter("RolID", typeof(int));
    
            var autorParameter = autor != null ?
                new ObjectParameter("autor", autor) :
                new ObjectParameter("autor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListRolesUsuarios_Result>("ListRolesUsuarios", rolIDParameter, autorParameter);
        }
    
        public virtual ObjectResult<ListUsuario_Result> ListUsuario(string autor, Nullable<int> status)
        {
            var autorParameter = autor != null ?
                new ObjectParameter("autor", autor) :
                new ObjectParameter("autor", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListUsuario_Result>("ListUsuario", autorParameter, statusParameter);
        }
    
        public virtual ObjectResult<ListUsuarios_Result> ListUsuarios(string autor, Nullable<int> status)
        {
            var autorParameter = autor != null ?
                new ObjectParameter("autor", autor) :
                new ObjectParameter("autor", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListUsuarios_Result>("ListUsuarios", autorParameter, statusParameter);
        }
    }
}
